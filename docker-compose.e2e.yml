# Docker Compose for E2E Testing Environment
# This is an OPTIONAL setup for local E2E testing if you prefer to use Docker Compose
# instead of Testcontainers.
#
# NOTE: The E2E tests use Testcontainers by default, which is the recommended approach.
# This file is provided as an alternative for developers who prefer Docker Compose.
#
# Usage:
#   1. Start services: docker-compose -f docker-compose.e2e.yml up -d
#   2. Run tests: pnpm test:e2e
#   3. Stop services: docker-compose -f docker-compose.e2e.yml down

version: '3.8'

services:
  # MongoDB for E2E tests
  mongodb-e2e:
    image: mongo:7
    container_name: solver-e2e-mongodb
    ports:
      - '27018:27017' # Different port to avoid conflict with dev environment
    environment:
      - MONGO_INITDB_DATABASE=intent-solver-e2e
    volumes:
      - mongodb-e2e-data:/data/db
    networks:
      - e2e-network
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for E2E tests
  redis-e2e:
    image: redis:8-alpine
    container_name: solver-e2e-redis
    ports:
      - '6380:6379' # Different port to avoid conflict with dev environment
    networks:
      - e2e-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  anvil-base:
    image: ghcr.io/foundry-rs/foundry:latest
    container_name: anvil-base
    ports:
      - '8545:8545'
    entrypoint: ['anvil']
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8545'
      - --chain-id
      - '8453' # Base mainnet chain ID
      - --fork-url
      - '${BASE_MAINNET_RPC_URL:-https://opt-mainnet.g.alchemy.com/v2/demo}'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8545']
      interval: 10s
      timeout: 5s
      retries: 5

  # Anvil - Optimism Mainnet Fork
  # NOTE: You need to set ALCHEMY_OP_MAINNET_URL environment variable
  anvil-op:
    image: ghcr.io/foundry-rs/foundry:latest
    container_name: solver-e2e-anvil-op
    ports:
      - '9545:9545'
    entrypoint: ['anvil']
    command:
      - --host
      - 0.0.0.0
      - --port
      - '9545'
      - --chain-id
      - '10'
      - --fork-url
      - '${OP_MAINNET_RPC_URL:-https://opt-mainnet.g.alchemy.com/v2/demo}'
    networks:
      - e2e-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9545']
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  mongodb-e2e-data:

networks:
  e2e-network:
    driver: bridge
