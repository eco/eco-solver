import { decodeAdapterClaim } from '../decoder'

const sampleAction = {
  type: 'RelayerAction',
  messageId: '1',
  action: {
    type: 'RelayerActionV1',
    id: '5733661007735281761772334014440438746663064426328386993708785201437156048896',
    timestamp: 1761772334,
    fill: {
      call: {
        chainId: 42161,
        to: '0x8a525dc484f893ca64fef507746ebd5036eec256',
        data: '0x00000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000d00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000014feebabe17996b3346cf80f04a1f072102a90cf090000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000440000000000000000000000000000000000000000000000000000000000000076000000000000000000000000000000000000000000000000000000000000003bc9280836c0000000000679a258c64d2f20f310e12b64b7375ea6d13ac0000000000000000000000000000000000000000000000000000000000000040c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000006efb61d8c9546ff1b500de3f244ea7000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002c441bede0300000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000062b2ac83e0c8666d9be4e75b99c0e96c822d23e1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000bf9b5b917a83f8adac17b0752846d41d8d7b7ee496901b85000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000802b77fe5e9d22e58b80c5889affd301b0b80a51f8a966d1fac3366eef82aa650d4eb230bd57829e0ebe3b00653cef588705699d85211ffef14d0466578b4e7fca00000000000000000000000000000000000000000000000000000000000000003b1c23625a8b06244c571055849ab6c382323bb9c41f9ee6d47fd8035081164f000000000000000000000000000000000000000000000000000000006902845a000000000000000000000000399dbd5df04f83103f77a58cba2b7c4d3cdede97000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000000000000000000000000000000000000000c35000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044a9059cbb000000000000000000000000778633920c1bb9f1b88cd24e6bca2912cd88e1de000000000000000000000000000000000000000000000000000000000000c3500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000042426848633000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000003e0000000000000000000000000778633920c1bb9f1b88cd24e6bca2912cd88e1de0cad231ac22bf8d20464732b44d3dbe07c4c1b1170e4dd579d3e000000000000000000000000000000000000000000000000000000000000000000006902845a000000000000000000000000778633920c1bb9f1b88cd24e6bca2912cd88e1de0000000000000000000000001eec363d2a4f7e874d11b0b9fc9ff25939ac180b00000000000000000000000000000000000000000000000000000000000021058c8c351b1aa1de46d94aa05dcc13ff8a2edb786fb6eee5ec793880f50e45653d8ee56ee864c363d1f4cbcf0d8490c8920ef00ecf3f5c3e14cdf4c6ab48a4c471a15f1cc08ac9b49724786ee3888eb67f6f160d151a11ebe70d80a1c27201441a40167022a18fb9a9d17e45d9dcfb8f4583d29c78df5c51daf8f8aaff048a9fd1000000000000000000000000000000000000000000000000000000006902845acc69ac819e2d6a63a8ada61598c19285c4d1f5e1fd7699563ec12d8f0bb7598e00000000000000000000000000000000000000000000000000000000000001c00000000000000000000000000000000000000000000000000000000000000360000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001420304000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044a9059cbb00000000000000000000000062b2ac83e0c8666d9be4e75b99c0e96c822d23e1000000000000000000000000000000000000000000000000000000000000c3500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000ad35394ccae6f1c1ee2e4be70e5e75ac87e6974356f0d61efc10b2a8054e09b1622f73b66e5ca151f101c90af59a9c74e8d37d362d417a90a88d359c41da78cb1b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041006e1826866aade5dff89df03c274f55ed2a3b2dcb9da7a8556d59171ca226112d4b086013e1dee38610197533992fc07dbdd0993ec542b2572107a66507ef2b1b00000000000000000000000000000000000000000000000000000000000000',
        value: '0',
      },
      tokens: [
        {
          tokenAddress: '0xaf88d065e77c8cc2239327c5edb3a432268e5831',
          amount: '50000',
        },
      ],
      metadata: {
        settlementLayers: ['ECO'],
        tokensOut: [
          {
            tokenAddress: '0xaf88d065e77c8cc2239327c5edb3a432268e5831',
            amount: '50000',
          },
        ],
      },
    },
    claims: [
      {
        call: {
          chainId: 8453,
          to: '0x8a525dc484f893ca64fef507746ebd5036eec256',
          data: '0x0fbb12dc000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000014feebabe17996b3346cf80f04a1f072102a90cf0900000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000042000000000000000000000000000000000000000000000000000000000000003bc9280836c0000000000679a258c64d2f20f310e12b64b7375ea6d13ac0000000000000000000000000000000000000000000000000000000000000040c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470000000000000000000000000000000000000000000000000000000000000034000000000000000000000000000000000006efb61d8c9546ff1b500de3f244ea7000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002c441bede0300000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001800000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000028000000000000000000000000000000000000000000000000000000000000002a0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000100000000000000000000000062b2ac83e0c8666d9be4e75b99c0e96c822d23e1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000bf9b5b917a83f8adac17b0752846d41d8d7b7ebb35b1c500000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000720000000000000000000000000931ab732c82d315fadbc223c50e1bfef1222bee600000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000640000000000000000000000000778633920c1bb9f1b88cd24e6bca2912cd88e1de000000000000000000000000778633920c1bb9f1b88cd24e6bca2912cd88e1de0cad231ac22bf8d20464732b44d3dbe07c4c1b1170e4dd579d3e000000000000000000000000000000000000000000000000000000000000000000006902845a000000000000000000000000000000000000000000000000000000006902845a0000000000000000000000000000000000000000000000000000000000002105000000000000000000000000000000000000000000000000000000000000a4b100000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000f42400000000000000000000000000000000000000000000000000000000000000260000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000005a00000000000000000000000000000000000000000000000000000000000000001603f2cff710fb6284c7985d1833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000000000000000000000000000000000000000f6cb0000000000000000000000000000000000000000000000000000000000000001603f2cff710fb6284c7985d1af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000000000000000000000000000000000000000c350000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001420304000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044095ea7b3000000000000000000000000000000000022d473030f116ddee9f6b43ac78ba3ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001420304000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000044a9059cbb00000000000000000000000062b2ac83e0c8666d9be4e75b99c0e96c822d23e1000000000000000000000000000000000000000000000000000000000000c350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014101c1d5521dc32115089d02774f5298df13dc71f000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000550000000000000000000000000000000000000000ad35394ccae6f1c1ee2e4be70e5e75ac87e6974356f0d61efc10b2a8054e09b1622f73b66e5ca151f101c90af59a9c74e8d37d362d417a90a88d359c41da78cb1b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
          value: '0',
        },
        tokens: [
          {
            tokenAddress: '0x833589fcd6edb6e08f4c7c32d4f71b54bda02913',
            amount: '63179',
          },
        ],
        beforeFill: true,
        metadata: {
          tokensIn: [
            {
              tokenAddress: '0x833589fcd6edb6e08f4c7c32d4f71b54bda02913',
              amount: '63179',
            },
          ],
          settlementLayer: 'ECO',
        },
      },
    ],
    metadata: {
      dryRun: true,
      userAddress: '0x778633920c1bb9f1b88cd24e6bca2912cd88e1de',
    },
  },
} as const

describe('Decoder', () => {
  describe('decodeAdapterClaim', () => {
    it('should decode claim calldata with optimized format (eco_permit2_handleClaim_optimized)', () => {
      // Use the same sample data as our working test script
      const claimData = sampleAction.action.claims[0].call.data

      const result = decodeAdapterClaim(claimData)

      // Verify claim data structure
      expect(result).toBeDefined()
      expect(result.predictedVault).toBeDefined()
      expect(result.order).toBeDefined()
      expect(result.userSigs).toBeDefined()

      // Verify order fields match expected values from sample data
      const order = result.order
      expect(order.sponsor).toBe('0x778633920C1bb9F1B88CD24E6bCA2912cd88E1de')
      expect(order.recipient).toBe('0x778633920C1bb9F1B88CD24E6bCA2912cd88E1de')
      expect(order.notarizedChainId).toBe(8453n) // Base
      expect(order.targetChainId).toBe(42161n) // Arbitrum
      expect(order.fillDeadline).toBeDefined()
      expect(order.expires).toBeDefined()

      // Verify tokens - should be in uint256[2][] format
      expect(order.tokenIn).toBeDefined()
      expect(order.tokenIn.length).toBeGreaterThan(0)
      expect(Array.isArray(order.tokenIn[0])).toBe(true)
      expect(order.tokenIn[0].length).toBe(2) // [tokenId, amount]

      expect(order.tokenOut).toBeDefined()
      expect(order.tokenOut.length).toBeGreaterThan(0)
      expect(Array.isArray(order.tokenOut[0])).toBe(true)
      expect(order.tokenOut[0].length).toBe(2) // [tokenId, amount]

      // Verify token amounts match metadata
      const [tokenInId, tokenInAmount] = order.tokenIn[0]
      const [tokenOutId, tokenOutAmount] = order.tokenOut[0]

      // Extract token addresses from lower 160 bits
      const tokenInAddress = `0x${tokenInId.toString(16).padStart(40, '0').slice(-40)}`
      const tokenOutAddress = `0x${tokenOutId.toString(16).padStart(40, '0').slice(-40)}`

      expect(tokenInAddress.toLowerCase()).toBe(
        '0x833589fcd6edb6e08f4c7c32d4f71b54bda02913',
      ) // USDC on Base
      expect(tokenInAmount).toBe(63179n)

      expect(tokenOutAddress.toLowerCase()).toBe(
        '0xaf88d065e77c8cc2239327c5edb3a432268e5831',
      ) // USDC on Arbitrum
      expect(tokenOutAmount).toBe(50000n)

      // Verify operations
      expect(order.preClaimOps).toBeDefined()
      expect(order.targetOps).toBeDefined()
      expect(order.qualifier).toBeDefined()

      // Verify signatures
      expect(result.userSigs.notarizedClaimSig).toBeDefined()
      expect(result.userSigs.preClaimSig).toBeDefined()
    })

    it('should throw error for invalid function', () => {
      const invalidData = '0x12345678' as const
      expect(() => decodeAdapterClaim(invalidData)).toThrow()
    })
  })
})
